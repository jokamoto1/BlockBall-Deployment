{"version":3,"sources":["components/Login.jsx","components/Canvas.jsx","App.js","reportWebVitals.js","index.js"],"names":["Login","props","history","useHistory","setAccessCode","setUserName","accesscode","userName","className","onSubmit","e","preventDefault","length","push","alert","type","onChange","target","value","href","Canvas","socketArr2","useState","start","setStart","winner","setWinner","over","setOver","io","socket","useParams","socketArr","setScoketArr","useEffect","console","log","on","game","emit","arr","sort","data","i","index","indexOf","newVar","splice","disconnect","canvasRef","useRef","loop","context","current","getContext","canvas","height","width","rectangle","jumping","x","x_velocity","y","y_velocity","rectangle2","net","sand","Ball","this","color","direction","radius","speed","prototype","updatePosition","Math","cos","sin","atan2","ball","controller","left","right","up","keyListener","event","key_state","keyCode","controller2","key_state2","id","random","fillStyle","fillRect","beginPath","rect","fill","strokeStyle","lineWidth","moveTo","lineTo","stroke","arc","PI","window","requestAnimationFrame","addEventListener","ref","onClick","map","player","to","App","username","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4fea9d1.chunk.js","sourcesContent":["import { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\"\n\nconst Login = (props) => {\n    const history = useHistory()\n    const {setUserName} = props\n    const {setAccessCode} = props\n    const {userName} = props\n    const {accesscode} = props\n    \n    const handleSubmit = (e) =>{\n        e.preventDefault()\n        if(accesscode.length === 0){\n            history.push('/')\n            alert(\"Must give room code!\")\n        }else{\n\n            history.push(`/game/${accesscode}`)\n        }\n    }\n\n\n    return (\n        <div className=\"bg-dark p-3 pb-2 d-flex flex-column w-25 m-auto mt-4 rounded\">\n            <h1 className=\"text-center align-middle\"><span className=\"text-warning\">Block</span><span\n                className=\"text-danger\">Ball</span><span className=\"text-info\">.js</span></h1>\n            <div className=\"text-center align-middle m-auto\">\n                <form onSubmit={handleSubmit}>\n                    {/* <div className=\"form-group text-warning\">\n                        <label className=\"display-5\">Username:</label>\n                        <input type=\"text\" className=\"form-control\" onChange={(e) => setUserName(e.target.value)}></input>\n\n                    </div> */}\n                    <div className=\"form-group text-danger \">\n                        <label className=\"display-5\">Room Code:</label>\n                        <input type=\"text\" className=\"form-control\" onChange={(e) => setAccessCode(e.target.value)}></input>\n                    </div>\n\n                    <button type=\"submit\" className=\"mt-3 btn btn-success\">Enter Game!</button>\n                </form>\n                <div className=\"text-warning mt-3\">\n                    <p>Created by: Jeremy Okamoto</p>\n                    <p>Github: <a href=\"https://github.com/jokamoto1\">Link</a> </p>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Login\n","\nimport React, { useRef, useEffect, useState } from 'react'\nimport io from 'socket.io-client';\nimport { useParams } from 'react-router';\nimport { set } from 'mongoose';\nimport { Link, useHistory } from 'react-router-dom';\nconst Canvas = props => {\n    const [start, setStart] = useState(false)\n    const [winner, setWinner] = useState()\n    const [over, setOver] = useState(false)\n    const [socket] = useState(() => io(':8000'));\n    const { accesscode } = useParams('accesscode')\n\n    const history = useHistory()\n    const [socketArr, setScoketArr] = useState([])\n    let socketArr2\n    useEffect(() => {\n        \n        console.log(accesscode)\n   \n        socket.on('startGameFromServer', () => {\n            game()\n        })\n        socket.on('leave', () => {\n            history.push('/')\n            alert(\"Room Full!\")\n        })\n\n        socket.emit('roomFromClient', accesscode)\n        socket.emit('connectionFromClient', accesscode)\n        socket.on('socketArrFromServer', arr => {\n\n            socketArr2 = arr.sort()\n            console.log(socketArr2)\n            setScoketArr(arr.sort())\n        })\n\n        socket.on('leaverFromServer', data => {\n            console.log(\"leaver\")\n            for (let i = 0; i < 2; i++) {\n                console.log(data)\n                console.log(socketArr2[i])\n                if (socketArr2[i] === data) {\n                    console.log(\"HERE\")\n                    var index = socketArr.indexOf(socketArr[i]);\n                    let newVar = socketArr.splice(index, 1)\n                    setScoketArr(newVar)\n                    socketArr2 = newVar\n                    alert(\"Other player left!\")\n                }\n            }\n        })\n        return () => {\n            socket.disconnect(true)\n\n        };\n\n\n    }, [])\n    const canvasRef = useRef(null)\n\n    const game = () => {\n        // console.log(socketArr)\n        setOver(false)\n\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n        var loop\n        context.canvas.height = 400;\n        context.canvas.width = 800;\n\n        const rectangle = {\n\n            height: 32,\n            jumping: true,\n            width: 32,\n            x: 50, // center of the canvas\n            x_velocity: 0,\n            y: 350,\n            y_velocity: 0\n\n        };\n        const rectangle2 = {\n\n            height: 32,\n            jumping: true,\n            width: 32,\n            x: 750, // center of the canvas\n            x_velocity: 0,\n            y: 350,\n            y_velocity: 0\n\n        };\n        const net = {\n            height: 300,\n            width: 30,\n            x: 385,\n            y: 245\n\n        }\n        const sand = {\n            height: 30,\n            width: 800,\n            x: 0,\n            y: 390\n        }\n        const Ball = function (x, y) {\n            this.color = \"white\"\n\n\n            this.direction = 5;\n            this.radius = 20;\n            this.speed = 3;\n            this.x = x;\n            this.y = y;\n\n        };\n        Ball.prototype = {\n\n            updatePosition: function (width, height) {\n\n                this.x += Math.cos(this.direction) * this.speed;\n                this.y += Math.sin(this.direction) * this.speed;\n\n                if (this.x - this.radius < 0) {\n\n                    this.x = this.radius;\n\n                    this.direction = Math.atan2(Math.sin(this.direction), Math.cos(this.direction) * -1);\n\n                } else if (this.x + this.radius > width) {\n\n                    this.x = width - this.radius;\n\n                    this.direction = Math.atan2(Math.sin(this.direction), Math.cos(this.direction) * -1);\n\n                }\n\n                if (this.y - this.radius < 0) {\n\n                    this.y = this.radius;\n\n                    this.direction = Math.atan2(Math.sin(this.direction) * -1, Math.cos(this.direction));\n                } else if (this.y + this.radius > height) {\n                    this.y = height - this.radius;\n\n                    this.direction = Math.atan2(Math.sin(this.direction) * -1, Math.cos(this.direction));\n                }\n            }\n        };\n        let ball = new Ball(0, 0)\n        var controller = {\n            left: false,\n            right: false,\n            up: false,\n            keyListener: function (event) {\n                var key_state = (event.type == \"keydown\") ? true : false\n                switch (event.keyCode) {\n                    case 65:// left key\n                        controller.left = key_state;\n                        break;\n                    case 87:// up key\n                        controller.up = key_state;\n                        break;\n                    case 68:// right key\n                        controller.right = key_state;\n                        break;\n                }\n            }\n        };\n        var controller2 = {\n            left: false,\n            right: false,\n            up: false,\n            keyListener: function (event) {\n                var key_state2 = (event.type == \"keydown\") ? true : false;\n                switch (event.keyCode) {\n                    case 65:// left key\n                        controller2.left = key_state2;\n                        break;\n                    case 87:// up key\n                        controller2.up = key_state2;\n                        break;\n                    case 68:// right key\n                        controller2.right = key_state2;\n                        break;\n                }\n            }\n        };\n        loop = function () {\n            socket.on('spectatorFromServer', data => {\n                if (socket.id != socketArr2[0] && socket.id != socketArr2[1]) {\n                    rectangle.x = data[0]\n                    rectangle.y = data[1]\n                    rectangle2.x = data[2]\n                    rectangle2.y = data[3]\n                    ball.x = data[4]\n                    ball.y = data[5]\n                    ball.speed = data[6]\n                    ball.direction = data[7]\n\n                }\n            })\n            socket.on('positionFromServer', data => {\n                if (socket.id === socketArr2[0]) {\n                    rectangle2.x = data[0]\n                    rectangle2.y = data[1]\n                }\n                if (socket.id === socketArr2[1]) {\n                    rectangle.x = data[0]\n                    rectangle.y = data[1]\n                    ball.x = data[2]\n                    ball.y = data[3]\n                    ball.speed = data[4]\n                    ball.direction = data[5]\n                }\n\n            })\n            if (socket.id === socketArr2[0]) {\n                if (controller.up && rectangle.jumping == false) {\n                    // socket.emit('moveFromClient', ['rectangle', 'up'])\n                    rectangle.y_velocity -= 30;\n                    rectangle.jumping = true;\n\n                }\n\n                if (controller.left) {\n                  \n\n                    rectangle.x_velocity -= 0.5;\n                }\n\n                if (controller.right) {\n\n                    \n\n                    rectangle.x_velocity += 0.5;\n                }\n                rectangle.y_velocity += 1;// gravity\n                rectangle.x += rectangle.x_velocity;\n                rectangle.y += rectangle.y_velocity;\n                rectangle.x_velocity *= 0.9;// friction\n                rectangle.y_velocity *= 0.9;// friction\n                if (rectangle.y > 358) {\n\n                    rectangle.jumping = false;\n                    rectangle.y = 358;\n                    rectangle.y_velocity = 0;\n\n                }\n\n                // if rectangle is going off the left of the screen\n                if (rectangle.x < 0) {\n\n                    rectangle.x = 0;\n                    //350\n                } else if (rectangle.x > 350) {// if rectangle goes past right boundary\n\n                    rectangle.x = 350;\n\n\n                }\n            }\n            //player2\n            if (socket.id === socketArr2[1]) {\n                if (controller2.up && rectangle2.jumping == false) {\n\n                    rectangle2.y_velocity -= 30;\n                    rectangle2.jumping = true;\n\n                }\n\n                if (controller2.left) {\n\n                    rectangle2.x_velocity -= 0.5;\n\n                }\n\n                if (controller2.right) {\n\n                    rectangle2.x_velocity += 0.5;\n\n                }\n                rectangle2.y_velocity += 1;// gravity\n                rectangle2.x += rectangle2.x_velocity;\n                rectangle2.y += rectangle2.y_velocity;\n                rectangle2.x_velocity *= 0.9;// friction\n                rectangle2.y_velocity *= 0.9;// friction\n                if (rectangle2.y > 358) {\n\n                    rectangle2.jumping = false;\n                    rectangle2.y = 358;\n                    rectangle2.y_velocity = 0;\n\n                }\n\n                // if rectangle is going off the left of the screen\n                if (rectangle2.x < 420 - 2) {\n\n                    rectangle2.x = 420 - 2;\n\n                } else if (rectangle2.x > 770) {// if rectangle goes past right boundary\n\n                    rectangle2.x = 770;\n\n                }\n            }\n\n\n\n            // if rectangle is falling below floor line\n\n            if (rectangle.x < ball.x + ball.radius &&\n                rectangle.x + rectangle.width > ball.x - ball.radius &&\n                rectangle.y < ball.y + (ball.radius) &&\n                rectangle.y + rectangle.height > ball.y) {\n                ball.direction = Math.atan2(Math.random() * (-2 - -1) + -1, 1)\n                // ball.direction = Math.atan2(-1, 1)\n                // ball.speed = 5 \n                ball.speed += .1\n            }\n            // if rectangle is falling below floor line\n\n            if (rectangle2.x < ball.x + (ball.radius) &&\n                rectangle2.x + rectangle2.width > ball.x - ball.radius &&\n                rectangle2.y < ball.y + (ball.radius) &&\n                rectangle2.y + rectangle2.height > ball.y) {\n                // ball.direction = Math.atan2(-1, -1)\n                ball.direction = Math.atan2(Math.random() * (-2 - -1) + -1, -1)\n                ball.speed += .1\n            }\n\n            if (net.x < ball.x + (ball.radius * 2) &&\n                net.x + net.width > ball.x &&\n                net.y < ball.y + (ball.radius * 2) &&\n                net.y + net.height > ball.y) {\n                // console.log(\"ball has hit net\")\n                ball.direction = Math.atan2(Math.sin(ball.direction), Math.cos(ball.direction) * -1);\n            }\n\n            if (sand.x < ball.x + (ball.radius * 2) &&\n                sand.x + sand.width > ball.x &&\n                sand.y + 17 < ball.y + (ball.radius * 2) &&\n                sand.y + 17 + sand.height > ball.y) {\n                // console.log(\"GAME OVER\")\n                ball.speed = 0\n            }\n\n\n\n\n            ball.y += 1 //gracity\n\n\n\n\n\n\n            context.fillStyle = \"#03acc3\"; // canvas\n            context.fillRect(0, 0, 800, 400);\n\n\n            context.fillStyle = \"#0000FF\";// player 1\n            context.beginPath();\n            context.rect(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n            context.fill();\n\n            context.fillStyle = \"#00FF00\";// player 2\n            context.beginPath();\n            context.rect(rectangle2.x, rectangle2.y, rectangle.width, rectangle.height);\n            context.fill();\n\n            context.fillStyle = \"#f4a460\";// sand 2\n            context.beginPath();\n            context.rect(sand.x, sand.y, sand.width, sand.height);\n            context.fill();\n\n            context.fillStyle = \"#808080\";// net 2\n            context.beginPath();\n            context.rect(net.x, net.y, net.width, net.height);\n            context.fill();\n\n            context.strokeStyle = \"#f9d71c\"; //sun\n            context.lineWidth = 1000;\n            context.beginPath();\n            context.moveTo(800, 0);\n            context.lineTo(750, 50)\n            context.stroke();\n\n\n            context.fillStyle = ball.color;\n            context.beginPath();\n            context.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2);\n            context.fill();\n\n            let height = 400\n            let width = 800\n            ball.updatePosition(width, height);\n            if (ball.speed === 0) {\n                if (ball.x < 400) {\n                    setWinner(socketArr2[1])\n         \n                } else {\n\n              \n                    setWinner(socketArr2[0])\n              \n\n\n                }\n                setOver(true)\n                setStart(false)\n                return\n            }\n            if (socket.id == socketArr2[0]) {\n\n                let data = [rectangle.x, rectangle.y, ball.x, ball.y, ball.speed, ball.direction, accesscode]\n                socket.emit('positionFromClient', data)\n            }\n            if (socket.id === socketArr2[1]) {\n\n                let data = [rectangle2.x, rectangle2.y, \"x\", \"y\", \"speed\", \"direction\", accesscode]\n                socket.emit('positionFromClient', data)\n\n            }\n            socket.emit('spectatorFromClient', [rectangle.x, rectangle.y, rectangle2.x, rectangle2.y, ball.x, ball.y, ball.speed, ball.direction, accesscode])\n\n            // call update when the browser is ready to draw again\n            window.requestAnimationFrame(loop);\n        };\n\n\n        window.requestAnimationFrame(loop);\n        window.addEventListener(\"keydown\", controller.keyListener);\n        window.addEventListener(\"keydown\", controller2.keyListener);\n        window.addEventListener(\"keyup\", controller.keyListener);\n        window.addEventListener(\"keyup\", controller2.keyListener);\n\n        setStart(true)\n    }\n\n\n    return (\n        <div className=\"bg-primary d-flex flex-column w-50 m-auto\">\n            <h1 className=\"text-center align-middle bg-dark rounded p-2 mt-3\"><span className=\"text-warning\">Block</span><span className=\"text-danger\">Ball</span><span className=\"text-info\">.js</span></h1>\n\n            <canvas className=\"border border-dark border-3\" ref={canvasRef} {...props} />\n            {socketArr ?\n                (over ?\n                    (winner === socketArr[0] ?\n                        <div className=\"text-primary bg-dark text-center rounded p-2 mt-3\" ><p>{winner} </p><h3>Scored!</h3></div>\n                        : <div className=\"text-success bg-dark text-center rounded p-2 mt-3\" ><p>{winner} </p><h3>Scored!</h3></div>)\n                    : \"\") : \"\"}\n\n\n            {start ? \"\"\n                : ((socket.id === socketArr[0] || socket.id === socketArr[1])) && socketArr.length === 2 ? <button id=\"start\" onClick={(e) => socket.emit('startGameFromClient', accesscode)} className=\"btn btn-success mt-3\">Play</button> : \"\"}\n            <div className=\"bg-dark text-warning rounded text-center pt-2 pb-2 mt-3 mb-3\">\n                <h1>Your Name:</h1>\n                {socketArr ?\n                    socket.id === socketArr[0] ? <p className=\"text-primary\">{socket.id}</p> : \"\" : \"\"}\n                {socketArr ?\n                    socket.id === socketArr[1] ? <p className=\"text-success\">{socket.id}</p> : \"\" : \"\"}\n                {socketArr ?\n                    socket.id != socketArr[1] && socket.id != socketArr[0] ? <p className=\"text-danger\">{socket.id}</p> : \"\" : \"\"}\n\n                <h1 >Players:</h1>\n                {socketArr ?\n                    socketArr.map((player) => {\n                        if (player === socketArr[0]) {\n                            return <p className=\"text-primary\">{player}</p>\n                        } else if (player === socketArr[1]) {\n                            return <p className=\"text-success\">{player}</p>\n\n                        } else {\n                            return <p className=\"text-danger\">{player}</p>\n                        }\n\n                    })\n\n                    : \"\"}\n                <h1 >Controls:</h1>\n                <p>Jump: <kbd>W</kbd></p>\n                <p>Left: <kbd>A</kbd></p>\n                <p>Right: <kbd>D</kbd></p>\n                <h1 >Rules:</h1>\n                <p className=\"w-50 m-auto\">The ball cannot touch the sand on your side of the court!</p>\n                <Link to=\"/\"><button className=\"btn btn-danger  w-50 m-auto\">Exit Game Room</button></Link>\n            </div>\n        </div >\n    )\n}\n\nexport default Canvas","import React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { useState } from 'react';\n\nimport Login from './components/Login'\n// import Game from './components/Game';\nimport Canvas from './components/Canvas';\n\n\nfunction App() {\n  const [username, setUserName] = useState(\"\")\n  const [accesscode, setAccessCode] = useState(\"\")\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <Login setAccessCode={setAccessCode} setUserName={setUserName} username={username} accesscode={accesscode} />\n        </Route>\n        <Route exact path=\"/game/:accesscode\">\n          <Canvas/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n    <App />,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}